# Tasks for creating security groups

- name: Create Web security group
  local_action:
    module: ec2_group
    name: "{{ project_name }}-{{env_type}}-webserver"
    description: "Security group for {{ project_name }} {{env_type}} webserver"
    region: ap-southeast-2
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8000
        to_port: 8000
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        from_port: 0
        to_port: 65535
        cidr_ip: 0.0.0.0/0
  register: ec2_group
  tags:
    sg_config

# Tasks for launching instances
- name: Launch webserver instance
  local_action:
    module: ec2
    region: ap-southeast-2
    keypair: "{{ ec2_key_pair }}"
    group: "{{ project_name }}-{{env_type}}-webserver"
    instance_type: "{{ webserver_instance_type }}"
    image:  "{{ webserver_ami }}"
    wait: yes
    instance_tags:
      project_env_server_type: "{{ project_name }}_{{env_type}}"
    exact_count: 1
    count_tag: 
      project_env_server_type: "{{ project_name }}_{{env_type}}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 250
        delete_on_termination: no
        tags:
          - project: "{{ project_name }}"
          - env_type: "{{ env_type }}"
          - Name: "{{ project_name }}-volume"
    termination_protection: yes
  register: ec2_webserver


- debug:
    var: ec2_webserver.tagged_instances[0].id

# Tasks for tagging and grouping launched instances
- name: Tag instance
  local_action: ec2_tag resource={{ item }} region=ap-southeast-2 state=present
  with_items: 
   - "{{ec2_webserver.tagged_instances[0].id}}"
  args:
    tags:
      Name: "{{project_name}}-{{env_type}}-webserver"
      env_type: "{{env_type}}"
      server_type: "web"
      webserver: "{{env_type}}"
      app: "{{project_name}}"
      project_env_server_type: "{{ project_name }}_{{env_type}}"
      project_env: "{{ project_name }}_{{env_type}}"



